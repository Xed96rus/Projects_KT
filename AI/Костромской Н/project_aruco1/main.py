# -*- coding: utf-8 -*-
"""OpenCV.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GzpCr0zJGe2VJ5A8Q_dyXacXm1NL7Eh-
"""

import cv2
import numpy as np
import imutils

# Загрузка словаря ArUco
aruco_dict = cv2.aruco.getPredefinedDictionary(cv2.aruco.DICT_6X6_250)

# Генерация маркера
marker_id = 40
marker_image = cv2.aruco.generateImageMarker(dictionary=aruco_dict,
                                             id=marker_id,
                                             sidePixels=200,
                                             borderBits=1)
marker_fone = np.ones((200 + 2*30, 200 + 2*30), dtype=np.uint8) * 255
marker_fone[30:-30, 30:-30] = marker_image
cv2.imwrite(filename=f'marker_{marker_id}.png', img=marker_fone)

# Настройка параметров детектора
parameters = cv2.aruco.DetectorParameters()
parameters.useAruco3Detection = True

detector = cv2.aruco.ArucoDetector(dictionary=aruco_dict,
                                   detectorParams=parameters)

# Открытие веб-камеры
cap = cv2.VideoCapture(0)

if not cap.isOpened():
    print("Error: Could not open webcam.")
    exit()

while True:
    ret, frame = cap.read()  # Захват кадра
    if not ret:
        print("Error: Failed to capture frame.")
        break

    # Преобразование кадра в оттенки серого
    gray_frame = cv2.cvtColor(src=frame, code=cv2.COLOR_BGRA2GRAY)

    # Детектирование маркеров
    corners, ids, rejected = detector.detectMarkers(image=gray_frame)

    # Если маркеры обнаружены, рисуем их контуры и ID
    if ids is not None:
        cv2.aruco.drawDetectedMarkers(frame, corners, ids)

        # Вывод ID обнаруженных маркеров
        print(f"Detected IDs: {ids}")

    # Отображение кадра с маркерами
    cv2.imshow('Webcam Feed', frame)

    # Выход по нажатию 'q'
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Освобождение ресурсов
cap.release()
cv2.destroyAllWindows()



