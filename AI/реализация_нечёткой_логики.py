# -*- coding: utf-8 -*-
"""Реализация нечёткой логики

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nTCo3ttQatJkYJpkJtqI737FapGctz84
"""

!cat /etc/*release

!pip install simpful

from simpful import *

"""Создаём систему, функционирующую на правилах нечеткой логики:"""

FS = FuzzySystem()

# Создаём термы
service_terms = [
    FuzzySet(function=Triangular_MF(a=0, b=0, c=5), term='poor'),
    FuzzySet(function=Triangular_MF(a=0, b=5, c=10), term='good'),
    FuzzySet(function=Triangular_MF(a=5, b=10, c=10), term='excellent')
]
# Создаём лингвистическую перемнную
service_lv = LinguisticVariable(FS_list=service_terms, concept='Service Quality', universe_of_discourse=[0, 10])
# Добавление лингвистической перменной в систему нечеткой логики
FS.add_linguistic_variable(name='Service', LV=service_lv)

food_terms = [
    FuzzySet(function=Triangular_MF(a=0, b=0, c=10), term='rancid'),
    FuzzySet(function=Triangular_MF(a=0, b=10, c=10), term='delicious')
]

food_lv = LinguisticVariable(FS_list=food_terms, concept= 'Food Quality', universe_of_discourse=[0, 10])
FS.add_linguistic_variable(name='Food', LV=food_lv)

tip_terms = [
    FuzzySet(function=Triangular_MF(a=0, b=0, c=10), term='small'),
    FuzzySet(function=Triangular_MF(a=0, b=10, c=20), term='average'),
    FuzzySet(function=Trapezoidal_MF(a=10, b=20, c=25, d=25), term='generous')
]

tip_lv = LinguisticVariable(FS_list=tip_terms, concept='Tip', universe_of_discourse=[0, 25])

FS.add_linguistic_variable(name='Tip', LV=tip_lv)

# Создаём правила нечёткой логики
rules = [
    'IF (Service IS poor) OR (Food IS rancid) THEN (Tip IS small)',
    'IF (Service IS good) THEN (Tip IS average)',
    'IF (Service IS excellent) OR (Food IS delicious) THEN (Tip IS generous)'
]
FS.add_rules(rules=rules)

# Задаём значения лингвистических переменных
FS.set_variable(name='Service', value=4)
FS.set_variable(name='Food', value=8)

print(FS.Mamdani_inference(terms=['Tip']))

fuzzy_system_temp = FuzzySystem()

temp_terms = [
    FuzzySet(points=[[0., 1.], [10., 1.], [15., 0.]], term='low'),
    FuzzySet(points=[[10., 0.], [15., 1.], [25., 1], [30., 0.]], term='medium'),
    FuzzySet(points=[[25., 0.], [30., 1.]], term='high')
]
temp_lv = LinguisticVariable(FS_list=temp_terms, concept='Temperature', universe_of_discourse=[0, 35])

fuzzy_system_temp.add_linguistic_variable(name='Temperature', LV=temp_lv)

heating_terms = [
    FuzzySet(points=[[70., 0.], [100., 1.]], term='high'),
    FuzzySet(points=[[45., 0.], [50., 1.], [70., 1.], [100., 0.]], term='medium'),
    FuzzySet(points=[[0., 1.], [30., 1.], [45., 0.]], term='low')
]

heating_lv = LinguisticVariable(FS_list=heating_terms, concept='Heating', universe_of_discourse=[0, 100])

fuzzy_system_temp.add_linguistic_variable(name='Heating', LV=heating_lv)

temp_rules = [
    "IF (Temperature IS low) THEN (Heating IS high)",
    "IF (Temperature IS medium) THEN (Heating IS medium)",
    "IF (Temperature IS high) THEN (Heating IS low)"
]
fuzzy_system_temp.add_rules(rules = temp_rules)

fuzzy_system_temp.set_variable('Temperature', 12)
print(fuzzy_system_temp.Mamdani_inference(['Heating']))